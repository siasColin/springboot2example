<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.net.colin.mapper.articleManage.ArticleCommentMapper">
  <resultMap id="BaseResultMap" type="cn.net.colin.model.articleManage.ArticleComment">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="info_id" jdbcType="BIGINT" property="infoId" />
    <result column="parent_id" jdbcType="BIGINT" property="parentId" />
    <result column="comment_content" jdbcType="VARCHAR" property="commentContent" />
    <result column="comment_time" jdbcType="TIMESTAMP" property="commentTime" />
    <result column="from_user_id" jdbcType="BIGINT" property="fromUserId" />
    <result column="to_user_id" jdbcType="BIGINT" property="toUserId" />
    <result column="read_status" jdbcType="INTEGER" property="readStatus" />
    <association property="articleInfo"
                 column="info_id"
                 select="cn.net.colin.mapper.articleManage.ArticleInfoMapper.selectByPrimaryKeyWithOutBLOBs">
    </association>
    <association property="fromUser"
                 column="from_user_id"
                 select="cn.net.colin.mapper.sysManage.SysUserMapper.selectByPrimaryKey">
    </association>
    <association property="toUser"
                 column="to_user_id"
                 select="cn.net.colin.mapper.sysManage.SysUserMapper.selectByPrimaryKey">
    </association>
    <collection property="childList" column="id" select="selectByParentId"/>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, info_id, parent_id, comment_content, comment_time, from_user_id, to_user_id, 
    read_status
  </sql>
  <select id="selectByExample" parameterType="cn.net.colin.model.articleManage.ArticleCommentCriteria" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from article_comment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from article_comment
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectByParentId" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from article_comment
    where parent_id = #{parentId,jdbcType=BIGINT}
    order by id asc
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from article_comment
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="cn.net.colin.model.articleManage.ArticleCommentCriteria">
    delete from article_comment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.net.colin.model.articleManage.ArticleComment">
    insert into article_comment (id, info_id, parent_id, 
      comment_content, comment_time, from_user_id, 
      to_user_id, read_status)
    values (#{id,jdbcType=BIGINT}, #{infoId,jdbcType=BIGINT}, #{parentId,jdbcType=BIGINT}, 
      #{commentContent,jdbcType=VARCHAR}, #{commentTime,jdbcType=TIMESTAMP}, #{fromUserId,jdbcType=BIGINT}, 
      #{toUserId,jdbcType=BIGINT}, #{readStatus,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="cn.net.colin.model.articleManage.ArticleComment">
    insert into article_comment
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="infoId != null">
        info_id,
      </if>
      <if test="parentId != null">
        parent_id,
      </if>
      <if test="commentContent != null">
        comment_content,
      </if>
      <if test="commentTime != null">
        comment_time,
      </if>
      <if test="fromUserId != null">
        from_user_id,
      </if>
      <if test="toUserId != null">
        to_user_id,
      </if>
      <if test="readStatus != null">
        read_status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="infoId != null">
        #{infoId,jdbcType=BIGINT},
      </if>
      <if test="parentId != null">
        #{parentId,jdbcType=BIGINT},
      </if>
      <if test="commentContent != null">
        #{commentContent,jdbcType=VARCHAR},
      </if>
      <if test="commentTime != null">
        #{commentTime,jdbcType=TIMESTAMP},
      </if>
      <if test="fromUserId != null">
        #{fromUserId,jdbcType=BIGINT},
      </if>
      <if test="toUserId != null">
        #{toUserId,jdbcType=BIGINT},
      </if>
      <if test="readStatus != null">
        #{readStatus,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <insert id="insertBatch" parameterType="java.util.List">
    insert into article_comment (id, info_id, parent_id, 
      comment_content, comment_time, 
      from_user_id, to_user_id, read_status
      )
    values 
    <foreach collection="list" index="index" item="item" separator=",">
      (#{item.id,jdbcType=BIGINT}, #{item.infoId,jdbcType=BIGINT}, #{item.parentId,jdbcType=BIGINT}, 
        #{item.commentContent,jdbcType=VARCHAR}, #{item.commentTime,jdbcType=TIMESTAMP}, 
        #{item.fromUserId,jdbcType=BIGINT}, #{item.toUserId,jdbcType=BIGINT}, #{item.readStatus,jdbcType=INTEGER}
        )
    </foreach>
  </insert>
  <insert id="insertBatchSelective" parameterType="java.util.List">
    insert into article_comment
    (id, info_id, parent_id, comment_content, comment_time, from_user_id, to_user_id, 
      read_status)
    values 
    <foreach collection="list" index="index" item="item" separator=",">
      <trim prefix="(" suffix=")" suffixOverrides=",">
        <if test="item.id != null">
          #{item.id,jdbcType=BIGINT},
        </if>
        <if test="item.id == null">
          NULL,
        </if>
        <if test="item.infoId != null">
          #{item.infoId,jdbcType=BIGINT},
        </if>
        <if test="item.infoId == null">
          NULL,
        </if>
        <if test="item.parentId != null">
          #{item.parentId,jdbcType=BIGINT},
        </if>
        <if test="item.parentId == null">
          NULL,
        </if>
        <if test="item.commentContent != null">
          #{item.commentContent,jdbcType=VARCHAR},
        </if>
        <if test="item.commentContent == null">
          NULL,
        </if>
        <if test="item.commentTime != null">
          #{item.commentTime,jdbcType=TIMESTAMP},
        </if>
        <if test="item.commentTime == null">
          NULL,
        </if>
        <if test="item.fromUserId != null">
          #{item.fromUserId,jdbcType=BIGINT},
        </if>
        <if test="item.fromUserId == null">
          NULL,
        </if>
        <if test="item.toUserId != null">
          #{item.toUserId,jdbcType=BIGINT},
        </if>
        <if test="item.toUserId == null">
          NULL,
        </if>
        <if test="item.readStatus != null">
          #{item.readStatus,jdbcType=INTEGER},
        </if>
        <if test="item.readStatus == null">
          NULL,
        </if>
      </trim>
    </foreach>
  </insert>
  <select id="countByExample" parameterType="cn.net.colin.model.articleManage.ArticleCommentCriteria" resultType="java.lang.Long">
    select count(*) from article_comment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update article_comment
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.infoId != null">
        info_id = #{record.infoId,jdbcType=BIGINT},
      </if>
      <if test="record.parentId != null">
        parent_id = #{record.parentId,jdbcType=BIGINT},
      </if>
      <if test="record.commentContent != null">
        comment_content = #{record.commentContent,jdbcType=VARCHAR},
      </if>
      <if test="record.commentTime != null">
        comment_time = #{record.commentTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.fromUserId != null">
        from_user_id = #{record.fromUserId,jdbcType=BIGINT},
      </if>
      <if test="record.toUserId != null">
        to_user_id = #{record.toUserId,jdbcType=BIGINT},
      </if>
      <if test="record.readStatus != null">
        read_status = #{record.readStatus,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update article_comment
    set id = #{record.id,jdbcType=BIGINT},
      info_id = #{record.infoId,jdbcType=BIGINT},
      parent_id = #{record.parentId,jdbcType=BIGINT},
      comment_content = #{record.commentContent,jdbcType=VARCHAR},
      comment_time = #{record.commentTime,jdbcType=TIMESTAMP},
      from_user_id = #{record.fromUserId,jdbcType=BIGINT},
      to_user_id = #{record.toUserId,jdbcType=BIGINT},
      read_status = #{record.readStatus,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.net.colin.model.articleManage.ArticleComment">
    update article_comment
    <set>
      <if test="infoId != null">
        info_id = #{infoId,jdbcType=BIGINT},
      </if>
      <if test="parentId != null">
        parent_id = #{parentId,jdbcType=BIGINT},
      </if>
      <if test="commentContent != null">
        comment_content = #{commentContent,jdbcType=VARCHAR},
      </if>
      <if test="commentTime != null">
        comment_time = #{commentTime,jdbcType=TIMESTAMP},
      </if>
      <if test="fromUserId != null">
        from_user_id = #{fromUserId,jdbcType=BIGINT},
      </if>
      <if test="toUserId != null">
        to_user_id = #{toUserId,jdbcType=BIGINT},
      </if>
      <if test="readStatus != null">
        read_status = #{readStatus,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.net.colin.model.articleManage.ArticleComment">
    update article_comment
    set info_id = #{infoId,jdbcType=BIGINT},
      parent_id = #{parentId,jdbcType=BIGINT},
      comment_content = #{commentContent,jdbcType=VARCHAR},
      comment_time = #{commentTime,jdbcType=TIMESTAMP},
      from_user_id = #{fromUserId,jdbcType=BIGINT},
      to_user_id = #{toUserId,jdbcType=BIGINT},
      read_status = #{readStatus,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateBatchByPrimaryKey" parameterType="java.util.List">
    update article_comment
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="info_id =case id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          when  #{item.id} then #{item.infoId}
        </foreach>
      </trim>
      <trim prefix="parent_id =case id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          when  #{item.id} then #{item.parentId}
        </foreach>
      </trim>
      <trim prefix="comment_content =case id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          when  #{item.id} then #{item.commentContent}
        </foreach>
      </trim>
      <trim prefix="comment_time =case id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          when  #{item.id} then #{item.commentTime}
        </foreach>
      </trim>
      <trim prefix="from_user_id =case id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          when  #{item.id} then #{item.fromUserId}
        </foreach>
      </trim>
      <trim prefix="to_user_id =case id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          when  #{item.id} then #{item.toUserId}
        </foreach>
      </trim>
      <trim prefix="read_status =case id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          when  #{item.id} then #{item.readStatus}
        </foreach>
      </trim>
    </trim>
    where id in 
    <foreach close=")" collection="list" index="index" item="item" open="(" separator=",">
       #{item.id} 
    </foreach>
  </update>
  <update id="updateBatchByPrimaryKeySelective" parameterType="java.util.List">
    update article_comment
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="info_id =case id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          <if test="item.infoId != null ">
            when  #{item.id} then #{item.infoId}
          </if>
          <if test="item.infoId == null ">
            when  #{item.id} then article_comment.info_id
          </if>
        </foreach>
      </trim>
      <trim prefix="parent_id =case id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          <if test="item.parentId != null ">
            when  #{item.id} then #{item.parentId}
          </if>
          <if test="item.parentId == null ">
            when  #{item.id} then article_comment.parent_id
          </if>
        </foreach>
      </trim>
      <trim prefix="comment_content =case id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          <if test="item.commentContent != null ">
            when  #{item.id} then #{item.commentContent}
          </if>
          <if test="item.commentContent == null ">
            when  #{item.id} then article_comment.comment_content
          </if>
        </foreach>
      </trim>
      <trim prefix="comment_time =case id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          <if test="item.commentTime != null ">
            when  #{item.id} then #{item.commentTime}
          </if>
          <if test="item.commentTime == null ">
            when  #{item.id} then article_comment.comment_time
          </if>
        </foreach>
      </trim>
      <trim prefix="from_user_id =case id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          <if test="item.fromUserId != null ">
            when  #{item.id} then #{item.fromUserId}
          </if>
          <if test="item.fromUserId == null ">
            when  #{item.id} then article_comment.from_user_id
          </if>
        </foreach>
      </trim>
      <trim prefix="to_user_id =case id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          <if test="item.toUserId != null ">
            when  #{item.id} then #{item.toUserId}
          </if>
          <if test="item.toUserId == null ">
            when  #{item.id} then article_comment.to_user_id
          </if>
        </foreach>
      </trim>
      <trim prefix="read_status =case id" suffix="end,">
        <foreach collection="list" index="index" item="item" separator=" ">
          <if test="item.readStatus != null ">
            when  #{item.id} then #{item.readStatus}
          </if>
          <if test="item.readStatus == null ">
            when  #{item.id} then article_comment.read_status
          </if>
        </foreach>
      </trim>
    </trim>
    where id in 
    <foreach close=")" collection="list" index="index" item="item" open="(" separator=",">
       #{item.id} 
    </foreach>
  </update>
  <update id="updateBatchByExample" parameterType="map">
    update article_comment
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="info_id =case id" suffix="end,">
        <foreach collection="recordList" index="index" item="item" separator=" ">
          when  #{item.id} then #{item.infoId}
        </foreach>
      </trim>
      <trim prefix="parent_id =case id" suffix="end,">
        <foreach collection="recordList" index="index" item="item" separator=" ">
          when  #{item.id} then #{item.parentId}
        </foreach>
      </trim>
      <trim prefix="comment_content =case id" suffix="end,">
        <foreach collection="recordList" index="index" item="item" separator=" ">
          when  #{item.id} then #{item.commentContent}
        </foreach>
      </trim>
      <trim prefix="comment_time =case id" suffix="end,">
        <foreach collection="recordList" index="index" item="item" separator=" ">
          when  #{item.id} then #{item.commentTime}
        </foreach>
      </trim>
      <trim prefix="from_user_id =case id" suffix="end,">
        <foreach collection="recordList" index="index" item="item" separator=" ">
          when  #{item.id} then #{item.fromUserId}
        </foreach>
      </trim>
      <trim prefix="to_user_id =case id" suffix="end,">
        <foreach collection="recordList" index="index" item="item" separator=" ">
          when  #{item.id} then #{item.toUserId}
        </foreach>
      </trim>
      <trim prefix="read_status =case id" suffix="end,">
        <foreach collection="recordList" index="index" item="item" separator=" ">
          when  #{item.id} then #{item.readStatus}
        </foreach>
      </trim>
    </trim>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateBatchByExampleSelective" parameterType="map">
    update article_comment
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="info_id =case id" suffix="end,">
        <foreach collection="recordList" index="index" item="item" separator=" ">
          <if test="item.infoId != null ">
            when  #{item.id} then #{item.infoId}
          </if>
          <if test="item.infoId == null ">
            when  #{item.id} then article_comment.info_id
          </if>
        </foreach>
      </trim>
      <trim prefix="parent_id =case id" suffix="end,">
        <foreach collection="recordList" index="index" item="item" separator=" ">
          <if test="item.parentId != null ">
            when  #{item.id} then #{item.parentId}
          </if>
          <if test="item.parentId == null ">
            when  #{item.id} then article_comment.parent_id
          </if>
        </foreach>
      </trim>
      <trim prefix="comment_content =case id" suffix="end,">
        <foreach collection="recordList" index="index" item="item" separator=" ">
          <if test="item.commentContent != null ">
            when  #{item.id} then #{item.commentContent}
          </if>
          <if test="item.commentContent == null ">
            when  #{item.id} then article_comment.comment_content
          </if>
        </foreach>
      </trim>
      <trim prefix="comment_time =case id" suffix="end,">
        <foreach collection="recordList" index="index" item="item" separator=" ">
          <if test="item.commentTime != null ">
            when  #{item.id} then #{item.commentTime}
          </if>
          <if test="item.commentTime == null ">
            when  #{item.id} then article_comment.comment_time
          </if>
        </foreach>
      </trim>
      <trim prefix="from_user_id =case id" suffix="end,">
        <foreach collection="recordList" index="index" item="item" separator=" ">
          <if test="item.fromUserId != null ">
            when  #{item.id} then #{item.fromUserId}
          </if>
          <if test="item.fromUserId == null ">
            when  #{item.id} then article_comment.from_user_id
          </if>
        </foreach>
      </trim>
      <trim prefix="to_user_id =case id" suffix="end,">
        <foreach collection="recordList" index="index" item="item" separator=" ">
          <if test="item.toUserId != null ">
            when  #{item.id} then #{item.toUserId}
          </if>
          <if test="item.toUserId == null ">
            when  #{item.id} then article_comment.to_user_id
          </if>
        </foreach>
      </trim>
      <trim prefix="read_status =case id" suffix="end,">
        <foreach collection="recordList" index="index" item="item" separator=" ">
          <if test="item.readStatus != null ">
            when  #{item.id} then #{item.readStatus}
          </if>
          <if test="item.readStatus == null ">
            when  #{item.id} then article_comment.read_status
          </if>
        </foreach>
      </trim>
    </trim>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>